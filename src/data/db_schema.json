{
  "drops" : "DROP TABLE IF EXISTS transactions;\nDROP TABLE IF EXISTS exchange_rates;\nDROP TABLE IF EXISTS loans;\nDROP TABLE IF EXISTS collaterals;\nDROP TABLE IF EXISTS branch;\nDROP TABLE IF EXISTS bank;\nDROP TABLE IF EXISTS maccounts;\nDROP TABLE IF EXISTS accounts;\nDROP TABLE IF EXISTS partner;\nDROP TABLE IF EXISTS general_ledger;\nDROP TABLE IF EXISTS address;\nDROP TYPE IF EXISTS partner;",
  "address" : "CREATE TABLE IF NOT EXISTS address\n(\n address_id int GENERATED ALWAYS AS IDENTITY,\n address    varchar(300) NOT NULL,\n City       varchar(150) NOT NULL,\n Country    varchar(150) NOT NULL,\n CONSTRAINT pk_address PRIMARY KEY ( address_id )\n);\n",
  "general_ledger" : "CREATE TABLE general_ledger\n(\n ledger_id              int GENERATED ALWAYS AS IDENTITY,\n reporting_type         varchar(50) NOT NULL,\n reporting_level_first  varchar(50) NOT NULL,\n reporting_level_second varchar(50) NOT NULL,\n reporting_level_third  varchar(50) NOT NULL,\n CONSTRAINT pk_general_ledger PRIMARY KEY ( ledger_id )\n);",
  "partner" : "CREATE TABLE IF NOT EXISTS partner\n(\n partner_id       int GENERATED ALWAYS AS IDENTITY,\n full_name        varchar(100) NOT NULL,\n address_id       int NOT NULL,\n sex              char(1) NOT NULL,\n email            varchar(150) NOT NULL,\n cityzenship      varchar(150) NOT NULL,\n date_of_birth    date NOT NULL,\n mobile_num       varchar(100) NOT NULL,\n partner_type     varchar(50) NOT NULL,\n economic_sector  varchar(150) NULL,\n position         varchar(200) NULL,\n CONSTRAINT pk_partner PRIMARY KEY ( partner_id ),\n CONSTRAINT fk_address FOREIGN KEY ( address_id ) REFERENCES address ( address_id )\n);\nCREATE INDEX FK_223 ON partner\n(\n address_id\n);",
  "accounts" : "CREATE TABLE IF NOT EXISTS accounts\n(\n account_id     int GENERATED ALWAYS AS IDENTITY,\n account_number bigint NOT NULL,\n opening_date   date NOT NULL,\n partner_id     int NOT NULL,\n balance        bigint NOT NULL,\n currency       varchar(50) NOT NULL,\n account_type   varchar(50) NOT NULL,\n CONSTRAINT pk_accounts PRIMARY KEY ( account_id ),\n CONSTRAINT fk_partner FOREIGN KEY ( partner_id ) REFERENCES partner ( partner_id )\n);\nCREATE INDEX FK_263 ON accounts\n(\n partner_id\n);",
  "maccounts" : "CREATE TABLE IF NOT EXISTS maccounts\n(\n interest_rate   double precision NOT NULL,\n redemption_date date NOT NULL,\n CONSTRAINT fk_accounts FOREIGN KEY ( account_id ) REFERENCES accounts ( account_id )\n)INHERITS (accounts);\nCREATE INDEX FK_258 ON maccounts\n(\n account_id\n);",
  "bank" : "CREATE TABLE IF NOT EXISTS bank\n(\n bank_id        int GENERATED ALWAYS AS IDENTITY,\n bank_name      char(50) NOT NULL,\n address_id     int NOT NULL,\n account_id int NOT NULL,\n CONSTRAINT pk_bank PRIMARY KEY ( bank_id ),\n CONSTRAINT fk_address FOREIGN KEY ( address_id ) REFERENCES address ( address_id ),\n CONSTRAINT fk_accounts FOREIGN KEY ( account_id ) REFERENCES accounts ( account_id )\n);\n\nCREATE INDEX FK_248 ON bank\n(\n address_id\n);\n\nCREATE INDEX FK_254 ON bank\n(\n account_id\n);",
  "branch" : "CREATE TABLE IF NOT EXISTS branch\n(\n branch_id   int GENERATED ALWAYS AS IDENTITY,\n branch_name varchar(50) NOT NULL,\n address_id  int NOT NULL,\n location    varchar(50) NOT NULL,\n bank_id     int NOT NULL,\n CONSTRAINT pk_branch PRIMARY KEY ( branch_id ),\n CONSTRAINT fk_bank FOREIGN KEY ( bank_id ) REFERENCES bank ( bank_id ),\n CONSTRAINT fk_address FOREIGN KEY ( address_id ) REFERENCES address ( address_id )\n);\n\nCREATE INDEX FK_251 ON branch\n(\n bank_id\n);\n\nCREATE INDEX fkIdx_185 ON branch\n(\n address_id\n);\n",
  "collaterals" : "CREATE TABLE IF NOT EXISTS collaterals\n(\n coll_contract_number int GENERATED ALWAYS AS IDENTITY,\n contract_date        date NOT NULL,\n partner_id           int NOT NULL,\n collateral_type      varchar(100) NOT NULL,\n collateral_name      varchar(100) NOT NULL,\n collateral_value     bigint NOT NULL,\n loan_contract_number int NOT NULL,\n CONSTRAINT pk_collaterals PRIMARY KEY ( coll_contract_number ),\n CONSTRAINT fk_partner FOREIGN KEY ( partner_id ) REFERENCES partner ( partner_id )\n);\n\nCREATE INDEX fkIdx_152 ON collaterals\n(\n partner_id\n);\n",
  "loans" : "CREATE TABLE IF NOT EXISTS loans\n(\n loan_contract_number int GENERATED ALWAYS AS IDENTITY,\n coll_contract_number int,\n interest_rate        double precision NOT NULL,\n commission_rate      double precision NOT NULL,\n contract_date        date NOT NULL,\n redemption_date      date NOT NULL,\n contract_sum         bigint NOT NULL,\n currency             varchar(50) NOT NULL,\n partner_iD           int NOT NULL,\n CONSTRAINT pk_loans PRIMARY KEY ( loan_contract_number ),\n CONSTRAINT fk_partner FOREIGN KEY ( partner_iD ) REFERENCES partner ( partner_id ),\n CONSTRAINT fk_collaterals FOREIGN KEY ( coll_contract_number ) REFERENCES collaterals ( coll_contract_number )\n);\nCREATE INDEX fkIdx_149 ON loans\n(\n partner_iD\n);\n\nCREATE INDEX fkIdx_87 ON loans\n(\n coll_contract_number\n);\n",
  "exchange_rates" : "CREATE TABLE exchange_rates\n(\n currency_id int GENERATED ALWAYS AS IDENTITY,\n currency CHAR(3) NOT NULL,\n exchange_rate double precision NOT NULL,\n start_date    date NOT NULL,\n end_date      date NOT NULL,\n CONSTRAINT pk_exchange_rates PRIMARY KEY ( currency_id )\n);\n",
  "transactions" : "CREATE TABLE IF NOT EXISTS transactions\n(\n transaction_id    int GENERATED ALWAYS AS IDENTITY,\n partner_id        int NOT NULL,\n ledger_id         int NOT NULL,\n contract_number   int NULL,\n transaction_type  char(50) NOT NULL,\n state             varchar(50) NOT NULL,\n transaction_sum   bigint NOT NULL,\n debit_account     int NOT NULL,\n currency_id     int NOT NULL,\n date              date NOT NULL,\n credit_account    int NOT NULL,\n CONSTRAINT pk_transactions PRIMARY KEY ( transaction_id ),\n CONSTRAINT fk_general_ledger FOREIGN KEY ( ledger_id ) REFERENCES general_ledger ( ledger_id ),\n CONSTRAINT fk_partner FOREIGN KEY (partner_id) REFERENCES partner (partner_id),\n CONSTRAINT fk_loans FOREIGN KEY (contract_number) REFERENCES loans ( loan_contract_number ),\n CONSTRAINT fk_accounts_db FOREIGN KEY (debit_account) REFERENCES accounts (account_id),\n CONSTRAINT fk_accounts_cr FOREIGN KEY ( credit_account ) REFERENCES accounts (account_id),\n CONSTRAINT fk_currency FOREIGN KEY ( currency_id ) REFERENCES exchange_rates ( currency_id )\n);\n\nCREATE INDEX FK_229 ON transactions\n(\n ledger_id\n);\n\nCREATE INDEX fkIdx_164 ON transactions\n(\n partner_id\n);\n\nCREATE INDEX fkIdx_168 ON transactions\n(\n contract_number\n);\n\nCREATE INDEX fkIdx_175 ON transactions\n(\n credit_account\n);\n\nCREATE INDEX fkIdx_178 ON transactions\n(\n debit_account\n);\nCREATE INDEX fkIdx_199 ON transactions\n(\n currency_id\n);\n"
}

